name: Pipeline CI
on: [push, pull_request]
jobs:
  ci-pipeline:
    name: ci pipeline
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 90
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      NODE_VERSION: 16.17.0
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
      - name: Install node.js packages
        run: npm install
      # - name: Run backend test
      #   run: |
      #     chmod +x mvnw
      #     npm run ci:backend:test
      # - name: Run frontend test
      #   run: npm run ci:frontend:test
      - name: Analyze code with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ ! -z "$SONAR_TOKEN" ]; then
              ./mvnw -ntp initialize sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=walido023 -Dsonar.projectKey=walido023_cicd-project-demo
          else
              echo No SONAR_TOKEN, skipping...
          fi
      - name: Package application
        run: npm run java:jar:prod
      # - name: Build and publish docker image
      #   if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      #   run: |
      #     GIT_TAG=:${GITHUB_REF#refs/tags/}
      #     DOCKER_TAG=${GIT_TAG#:refs/heads/main}
      #     ./mvnw -ntp jib:build -Djib.to.image=walidos023/cicd-demo${DOCKER_TAG} -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}" -Pprod
      - id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          token_format: "access_token"
          create_credentials_file: true
          activate_credentials_file: true
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_ID }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          access_token_lifetime: '100s'
      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: europe-west9-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Build and publish docker image
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: |
          GIT_TAG=:${GITHUB_REF#refs/tags/}
          DOCKER_TAG=${GIT_TAG#:refs/heads/main}
          ./mvnw -ntp jib:build -Djib.to.image=europe-west9-docker.pkg.dev/s4a-cicd-poc-sbx-5b20/demo-repo/cicd-demo${DOCKER_TAG}  -Pprod


      # - name: Build with Maven
      #   run: |
      #     ./mvn clean deploy -DskipTests -Pprod \
      #     -DaltReleaseDeploymentRepository=artifact-registry::default::artifactregistry://europe-west9-docker.pkg.dev/s4a-cicd-poc-sbx-5b20/demo-repo
