name: Pipeline CI
#on: [push, pull_request]   https://docs.github.com/en/enterprise-cloud@latest/actions/using-workflows/triggering-a-workflow
on:
  push:
    branches:
      - main
#on: workflow_dispatch   Manual start of the workflow
jobs:
  ci-pipeline:
    name: ci pipeline
    runs-on: ubuntu-latest  #windows-latest or macos-latest : GitHub-hosted runners https://docs.github.com/en/enterprise-cloud@latest/actions/using-jobs/using-a-matrix-for-your-jobs#using-a-matrix-strategy
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 90    #max 6 hours : 360 min
    permissions:
      contents: 'read'   #Get the content of a file or directory in a public repository.
      id-token: 'write'    #To get an OIDC token it must have permissions to make API calls against the OIDC provider.
    env:
      NODE_VERSION: 16.17.0
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
    steps:
      - uses: actions/checkout@v3     #https://github.com/marketplace?type=actions&query=checkout+
      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
      - name: Install node.js packages
        run: npm install
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run backend test
        run: |
          chmod +x mvnw
          npm run ci:backend:test
      - name: Run frontend test
        run: npm run ci:frontend:test
      - name: Analyze code with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=walido023 -Dsonar.projectKey=walido023_cicd-project-demo
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: codecov-umbrella # optional
      - name: Package application
        run: npm run java:jar:prod
      - id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          token_format: "access_token"
          create_credentials_file: true
          activate_credentials_file: true
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_ID }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          access_token_lifetime: '100s'
      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: europe-west9-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Build and publish docker image
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: |
          GIT_TAG=:${GITHUB_REF#refs/tags/}
          DOCKER_TAG=${GIT_TAG#:refs/heads/main}
          ./mvnw -ntp jib:build -Djib.to.image=europe-west9-docker.pkg.dev/s4a-cicd-poc-sbx-5b20/demo-repo/cicd-demo${DOCKER_TAG}  -Pprod
          //
